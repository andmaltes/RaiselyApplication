{"version":3,"sources":["./src/app/modals/error-modals/error-modal/error-modal-b/error-modal-b.component.ts","./src/app/modals/error-modals/error-modal/error-modal-b/error-modal-b.component.html","./src/app/mainStore/app.reducer.ts","./src/app/modals/error-modals/store/index.ts","./src/environments/environment.ts","./src/app/modals/error-modals/error-modals.module.ts","./src/app/modals/error-modals/store/error-modal.actions.ts","./src/app/modals/confirmation-moldal/confirmation-modal.component.ts","./src/app/modals/confirmation-moldal/confirmation-modal.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modals/error-modals/store/error-modal.reducers.ts","./src/app/app.module.ts","./src/app/modals/error-modals/services/error-modal.store.service.ts","./src/app/modals/error-modals/error-modal/error-modal.component.ts","./src/app/modals/error-modals/error-modal/error-modal.component.html","./src/app/modals/error-modals/store/error-modal.selectors.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-error-modal-b',\r\n    templateUrl: './error-modal-b.component.html',\r\n    styleUrls: ['./error-modal-b.component.scss'],\r\n})\r\nexport class ErrorModalBComponent {\r\n    @Input() public close: () => void;\r\n    public errorList: string[] = [];\r\n\r\n    @Input() set errorListInput(errorList: string[]) {\r\n        this.errorList = Array.from(new Set(errorList));\r\n    }\r\n\r\n}\r\n","\r\n<h2 mat-dialog-title >Something has happened!</h2 >\r\n\r\n<mat-dialog-content >\r\n\t<ng-container *ngFor=\"let error of errorList\" >\r\n        <div>{{error}}</div>\r\n\t</ng-container >\r\n</mat-dialog-content >\r\n\r\n<mat-dialog-actions align=\"end\" >\r\n\t<button class=\"mat-raised-button mat-primary\" (click)=\"close()\" >OK</button >\r\n</mat-dialog-actions >\r\n","import * as ErrorModal from '../modals/error-modals/store/index';\r\n\r\nexport const reducers: any = {\r\n    ErrorModal: ErrorModal.reducer,\r\n};\r\n","import * as actions from './error-modal.actions';\r\nimport { initialErrorModalState, reducer } from './error-modal.reducers';\r\nimport * as selectors from './error-modal.selectors';\r\n\r\nimport { IErrorModalState } from './error-modal.interface';\r\n\r\nexport * from './error-modal.actions';\r\nexport * from './error-modal.reducers';\r\nexport * from './error-modal.selectors';\r\n\r\nexport {\r\n    IErrorModalState,\r\n    actions,\r\n    initialErrorModalState,\r\n    reducer,\r\n    selectors,\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ErrorModalBComponent } from './error-modal/error-modal-b/error-modal-b.component';\r\nimport { ErrorModalComponent } from './error-modal/error-modal.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ErrorModalComponent,\r\n        ErrorModalBComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        MatDialogModule,\r\n    ],\r\n})\r\nexport class ErrorModalsModule {\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const SET_ERROR = '[ERROR] SET_ERROR';\r\nexport const CLEAR_ERRORS = '[ERROR] CLEAR_ERRORS';\r\nexport const SET_MODAL = '[ERROR] SET_MODAL';\r\n\r\n\r\nexport const setError = createAction(SET_ERROR, props<{ error: string }>());\r\nexport const clearErrors = createAction(CLEAR_ERRORS);\r\nexport const setModal = createAction(SET_MODAL, props<{ open: boolean }>());\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirmation-modal',\n    templateUrl: './confirmation-modal.component.html',\n    styleUrls: ['./confirmation-modal.component.scss']\n})\nexport class ConfirmationModalComponent implements OnInit {\n    message: string;\n\n    constructor(private dialogRef: MatDialogRef<ConfirmationModalComponent>) {\n    }\n\n    ngOnInit(): void {\n    }\n  public close() {\n    this.dialogRef.close();\n  }\n}\n","\n<h2 mat-dialog-title >Thanks!</h2 >\n\n<mat-dialog-content >\n{{message}}\n</mat-dialog-content >\n\n<mat-dialog-actions align=\"end\" >\n    <button class=\"mat-raised-button mat-primary\" (click)=\"close()\" >OK</button >\n</mat-dialog-actions >\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ErrorModalStoreService } from './modals/error-modals/services/error-modal.store.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ErrorModalComponent } from './modals/error-modals/error-modal/error-modal.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    title = 'Application';\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private errorModalStoreService: ErrorModalStoreService, private matDialog: MatDialog) {\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        // Now let's also unsubscribe from the subject itself:\n        this.destroy$.unsubscribe();\n    }\n\n    ngOnInit(): void {\n        this.errorModalStoreService.selectModal()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((showErrorModal: boolean) => {\n                if (showErrorModal) {\n                    const dialogConfig = new MatDialogConfig();\n                    dialogConfig.disableClose = true;\n                    dialogConfig.autoFocus = true;\n                    this.matDialog.open(ErrorModalComponent, dialogConfig);\n                }\n            });\n    }\n}\n","<router-outlet></router-outlet>\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as errorActions from './error-modal.actions';\r\nimport { IErrorModalState } from './index';\r\n\r\nexport const initialErrorModalState: IErrorModalState = {\r\n    errors: [],\r\n    modal:  false,\r\n};\r\n\r\nexport const errorReducer = createReducer(\r\n    initialErrorModalState,\r\n    on(errorActions.setError, (state: IErrorModalState, action: { error: string }) => {\r\n        const newState: IErrorModalState = { ...state};\r\n        const errors: string[]           = [...newState.errors];\r\n        errors.push(action.error);\r\n        newState.errors = [...errors];\r\n        return newState;\r\n    }),\r\n    on(errorActions.clearErrors, (state: IErrorModalState) => {\r\n        const newState: IErrorModalState = { ...state};\r\n        newState.errors                  = [...[]];\r\n        return newState;\r\n    }),\r\n    on(errorActions.setModal, (state: IErrorModalState, action: { open: boolean }) => {\r\n        const newState: IErrorModalState = { ...state};\r\n        newState.modal                   = action.open;\r\n        return newState;\r\n    }),\r\n);\r\n\r\nexport function reducer(state: IErrorModalState | undefined, action: Action): IErrorModalState {\r\n    return errorReducer(state, action);\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { ErrorModalsModule } from './modals/error-modals/error-modals.module';\nimport { reducers } from './mainStore/app.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfirmationModalComponent } from './modals/confirmation-moldal/confirmation-modal.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ConfirmationModalComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        StoreModule.forRoot(reducers),\n        EffectsModule.forRoot([]),\n        StoreDevtoolsModule.instrument({\n            maxAge: 25, // Retains last 25 states\n        }),\n        ErrorModalsModule,\n        MatDialogModule,\n        HttpClientModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { IErrorModalState } from '../store';\r\nimport * as actions from '../store/error-modal.actions';\r\nimport * as selectors from '../store/error-modal.selectors';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ErrorModalStoreService {\r\n    constructor(private store: Store<IErrorModalState>) {\r\n    }\r\n\r\n    public clearErrors(): void {\r\n        this.store.dispatch(actions.clearErrors());\r\n    }\r\n\r\n    public selectErrors(): Observable<string[]> {\r\n        return this.store.select(selectors.selectErrors);\r\n    }\r\n\r\n    public selectModal(): Observable<boolean> {\r\n        return this.store.select(selectors.selectModal);\r\n    }\r\n\r\n    public setError(error: string): void {\r\n        this.store.dispatch(actions.setError({ error }));\r\n        this.setModal(true);\r\n    }\r\n\r\n    public setModal(open: boolean): void {\r\n        this.store.dispatch(actions.setModal({ open }));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ErrorModalStoreService } from '../services/error-modal.store.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-error-modal',\r\n    templateUrl: './error-modal.component.html',\r\n    styleUrls: ['./error-modal.component.scss'],\r\n})\r\nexport class ErrorModalComponent implements OnInit {\r\n\r\n    public errorList$: Observable<string[]>;\r\n\r\n    constructor(private errorModalStoreService: ErrorModalStoreService,\r\n                private dialogRef: MatDialogRef<ErrorModalComponent>\r\n    ) {\r\n    }\r\n\r\n    public close = () => {\r\n        this.errorModalStoreService.setModal(false);\r\n        this.errorModalStoreService.clearErrors();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.errorList$ = this.errorModalStoreService.selectErrors();\r\n    }\r\n}\r\n","<app-error-modal-b [errorListInput]=\"errorList$|async\" [close]=\"close\"></app-error-modal-b >\r\n","import { createSelector } from '@ngrx/store';\r\nimport { IErrorModalState } from './error-modal.interface';\r\n\r\nexport const selectErrorModalState = (state: any) => (\r\n    state.ErrorModal\r\n);\r\nexport const selectModal = createSelector(\r\n    selectErrorModalState,\r\n    (errorModalState: IErrorModalState) => errorModalState.modal,\r\n);\r\nexport const selectErrors = createSelector(\r\n    selectErrorModalState,\r\n    (errorModalState: IErrorModalState) => errorModalState.errors,\r\n);\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SignUpModule } from './sign-up/sign-up.module';\n\n\nconst routes: Routes = [{\n    path: 'sign-up',\n    loadChildren: () => import('./sign-up/sign-up.module')\n        .then((m: { SignUpModule: SignUpModule }) => m.SignUpModule)\n},\n    {\n        path: '**',\n        redirectTo: 'sign-up'\n    }];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}