{"version":3,"sources":["webpack:///node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///src/app/sign-up/sign-up/sign-up-container/signup-container.component.ts","webpack:///src/app/sign-up/sign-up/sign-up-container/signup-container.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///src/app/sign-up/services/sign-up.service.ts","webpack:///src/app/sign-up/sign-up/sign-up-container/sign-up-form/sign-up-form.component.ts","webpack:///src/app/sign-up/sign-up/sign-up-container/sign-up-form/sign-up-form.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///src/app/sign-up/sign-up.module.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///src/app/sign-up/sign-up-routing.module.ts"],"names":["NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","CheckboxControlValueAccessor","multi","_renderer","_elementRef","onChange","_","onTouched","value","setProperty","nativeElement","fn","isDisabled","ɵfac","CheckboxControlValueAccessor_Factory","t","ɵdir","type","selectors","hostBindings","CheckboxControlValueAccessor_HostBindings","rf","ctx","CheckboxControlValueAccessor_change_HostBindingHandler","$event","target","checked","CheckboxControlValueAccessor_blur_HostBindingHandler","features","ctorParameters","args","selector","host","providers","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","userAgent","getUserAgent","test","toLowerCase","COMPOSITION_BUFFER_MODE","_compositionMode","_composing","normalizedValue","DefaultValueAccessor_Factory","DefaultValueAccessor_HostBindings","DefaultValueAccessor_input_HostBindingHandler","_handleInput","DefaultValueAccessor_blur_HostBindingHandler","DefaultValueAccessor_compositionstart_HostBindingHandler","_compositionStart","DefaultValueAccessor_compositionend_HostBindingHandler","_compositionEnd","Boolean","decorators","AbstractControlDirective","undefined","control","reset","errorCode","path","hasError","getError","valid","invalid","pending","disabled","enabled","errors","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","AbstractControlDirective_Factory","ControlContainer","ControlContainer_Factory","ɵControlContainer_BaseFactory","unimplemented","ngDevMode","Error","NgControl","arguments","_parent","name","valueAccessor","_rawValidators","_rawAsyncValidators","AbstractControlStatus","cd","_cd","ngControlStatusHost","NgControlStatus","NgControlStatus_Factory","hostVars","NgControlStatus_HostBindings","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","NgControlStatusGroup","NgControlStatusGroup_Factory","NgControlStatusGroup_HostBindings","isEmptyInputValue","length","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","parseFloat","isNaN","max","minLength","maxLength","pattern","nullValidator","regex","regexStr","charAt","RegExp","toString","validators","presentValidators","filter","isPresent","mergeErrors","executeValidators","observables","map","toObservable","pipe","o","r","obs","arrayOfErrors","res","forEach","Object","assign","keys","validator","isValidatorFn","validate","normalizeValidators","c","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","NumberValueAccessor_Factory","NumberValueAccessor_HostBindings","NumberValueAccessor_input_HostBindingHandler","NumberValueAccessor_blur_HostBindingHandler","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","throwNameError","RadioControlRegistry","_accessors","accessor","push","i","splice","_isSameGroup","fireUncheck","controlPair","_control","RadioControlRegistry_Factory","ɵprov","token","factory","_registry","_injector","get","_checkName","add","remove","_state","_fn","select","writeValue","formControlName","RadioControlValueAccessor_Factory","RadioControlValueAccessor_HostBindings","RadioControlValueAccessor_change_HostBindingHandler","RadioControlValueAccessor_blur_HostBindingHandler","inputs","propDecorators","RANGE_VALUE_ACCESSOR","RangeValueAccessor","RangeValueAccessor_Factory","RangeValueAccessor_HostBindings","RangeValueAccessor_change_HostBindingHandler","RangeValueAccessor_input_HostBindingHandler","RangeValueAccessor_blur_HostBindingHandler","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","ReactiveErrors","console","warn","directiveName","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString","id","slice","_extractId","valueString","split","_optionMap","Map","_idCounter","_compareWith","is","_getOptionId","_getOptionValue","Array","from","has","JSON","stringify","SelectControlValueAccessor_Factory","SelectControlValueAccessor_HostBindings","SelectControlValueAccessor_change_HostBindingHandler","SelectControlValueAccessor_blur_HostBindingHandler","compareWith","NgSelectOption","_element","_select","_registerOption","set","_setElementValue","NgSelectOption_Factory","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString$1","_extractId$1","HTMLCollection","optionSelectedStateSetter","isArray","ids","v","opt","_setSelected","indexOf","selected","selectedOptions","options","item","val","_value","SelectMultipleControlValueAccessor_Factory","SelectMultipleControlValueAccessor_HostBindings","SelectMultipleControlValueAccessor_change_HostBindingHandler","SelectMultipleControlValueAccessor_blur_HostBindingHandler","ɵNgSelectMultipleOption","ɵNgSelectMultipleOption_Factory","controlPath","parent","setUpControl","dir","_throwError","compose","asyncValidator","composeAsync","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","cleanUpControl","noop","_noControlError","registerOnChange","registerOnTouched","_clearChangeFns","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","_pendingTouched","markAsTouched","markAsDirty","setValue","emitModelToViewChange","viewToModelUpdate","emitModelEvent","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","hasOwnProperty","change","isFirstChange","currentValue","BUILTIN_ACCESSORS","isBuiltInAccessor","some","a","constructor","syncPendingControls","form","directives","_syncPendingControls","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeDir","list","el","index","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","ngModelWarning","VALID","INVALID","PENDING","DISABLED","_find","delimiter","controlToFind","FormGroup","controls","FormArray","at","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","pickAsyncValidators","asyncValidators","coerceToAsyncValidator","AbstractControl","_hasOwnPendingAsyncValidator","_onCollectionChange","_onDisabledChange","_composedValidatorFn","_composedAsyncValidatorFn","newValidator","opts","onlySelf","_forEachChild","markAllAsTouched","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","emit","markAsPending","skipPristineCheck","_parentMarkedDirty","disable","_updateValue","_updateAncestors","changeFn","enable","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","subscribe","setErrors","unsubscribe","_updateControlsErrors","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","_updateOn","parentDirty","validatorFn","asyncValidatorFn","x","FormControl","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","condition","cb","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","acc","getRawValue","subtreeUpdated","updated","child","k","_reduceValue","contains","initValue","_registerControl","reduce","formDirectiveProvider","NgForm","ɵ0","Promise","resolve","resolvedPromise","submitted","_directives","ngSubmit","then","container","_findContainer","removeControl","group","resetForm","pop","NgForm_Factory","NgForm_HostBindings","NgForm_submit_HostBindingHandler","onSubmit","NgForm_reset_HostBindingHandler","onReset","outputs","exportAs","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractFormGroupDirective_Factory","ɵAbstractFormGroupDirective_BaseFactory","TemplateDrivenErrors","modelGroupProvider","NgModelGroup","modelGroupParentException","NgModelGroup_Factory","formControlBinding","NgModel","ɵ0$1","resolvedPromise$1","_registered","update","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","NgModel_Factory","ɵNgNoValidate","ɵNgNoValidate_Factory","hostAttrs","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding$1","FormControlDirective","_ngModelWarningConfig","_isControlChanged","disabledAttrWarning","FormControlDirective_Factory","String","formDirectiveProvider$1","FormGroupDirective","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","newCtrl","_oldForm","sync","async","missingFormException","FormGroupDirective_Factory","FormGroupDirective_HostBindings","FormGroupDirective_submit_HostBindingHandler","FormGroupDirective_reset_HostBindingHandler","formGroupNameProvider","FormGroupName","_hasInvalidParent","groupParentException","FormGroupName_Factory","formArrayNameProvider","FormArrayName","addFormArray","removeFormArray","arrayParentException","getFormArray","FormArrayName_Factory","controlNameBinding","FormControlName","_added","updateModel","ngModelGroupException","controlParentException","FormControlName_Factory","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","_required","required","RequiredValidator_Factory","RequiredValidator_HostBindings","requiredTrue","CheckboxRequiredValidator_Factory","ɵCheckboxRequiredValidator_BaseFactory","CheckboxRequiredValidator_HostBindings","EMAIL_VALIDATOR","EmailValidator","_enabled","email","EmailValidator_Factory","MIN_LENGTH_VALIDATOR","MinLengthValidator","_validator","_createValidator","minlength","parseInt","MinLengthValidator_Factory","MinLengthValidator_HostBindings","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","MaxLengthValidator_Factory","MaxLengthValidator_HostBindings","PATTERN_VALIDATOR","PatternValidator","PatternValidator_Factory","PatternValidator_HostBindings","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","ɵmod","ɵinj","ɵInternalFormsSharedModule_Factory","ngJitMode","declarations","exports","isAbstractControlOptions","FormBuilder","controlsConfig","_reduceControls","_createControl","controlConfig","FormBuilder_Factory","VERSION","FormsModule","FormsModule_Factory","imports","ReactiveFormsModule","ngModule","useValue","warnOnNgModelWithFormControl","ReactiveFormsModule_Factory","_c0","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","_document","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","cleanLiteral","sanitize","HTML","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","alias","className","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","key","iconKey","config","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","handleError","foundIcon","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","_setSvgAttributes","_toSvgElement","_svgElementFromString","appendChild","str","div","createElement","innerHTML","element","attributes","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","_a","withCredentials","inProgressFetch","req","responseType","configNamespace","svgElement","MatIconRegistry_Factory","providedIn","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","deps","useFactory","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","attr","funcIriAttributeSelector","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","_inline","_currentIconFetch","EMPTY","parts","svgIconChanges","_svgNamespace","_svgName","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","previousValue","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","styleTags","querySelectorAll","textContent","_cacheChildrenWithExternalReferences","layoutElement","childCount","removeChild","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","classList","fontIcon","_previousFontIconClass","trim","elements","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","ɵcmp","MatIcon_HostBindings","color","ngContentSelectors","decls","vars","template","MatIcon_Template","styles","encapsulation","changeDetection","None","OnPush","MatIconModule","MatIconModule_Factory","SignupContainerComponent","templateUrl","styleUrls","_c1","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","MatCard_HostBindings","MatCard_Template","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatProgressSpinner__svg_circle_1_Template","ctx_r0","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","platform","animationMode","defaults","_diameter","_fallbackAnimation","mode","trackedDiameters","_diameters","_getSpinnerAnimationLabel","head","Set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","animationClass","Math","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","strokeCircumference","replace","_strokeWidth","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_getViewBox","WeakMap","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","SignUpService","http","request","post","SignUpFormComponent","formBuilder","errorModalStoreService","signUpService","matDialog","destroy$","signupForm","firstName","lastName","confirmPassword","password","validatePassword","hidePassword","hidePasswordConfirmation","debounceTime","userExists","EnumUserExists","initial","next","formGroup","matchingControl","checking","campaignUuid","data","checkUser","response","exists","error","unknown","setError","log","signUp","dialogConfig","disableClose","autoFocus","reference","open","componentInstance","submit","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_focusMonitor","isRoundButton","_hasHostAttributes","isIconButton","_getHostElement","monitor","stopMonitoring","origin","focusVia","disableRipple","attribute","hasAttribute","MatButton_Factory","viewQuery","MatButton_Query","_t","ripple","first","MatButton_HostBindings","MatButton_Template","_isRippleDisabled","MatAnchor","focusMonitor","event","preventDefault","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","_haltDisabledEvents","tabIndex","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","listenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","elementOrRef","isBrowser","info","subject","result","cssClass","listener","animationName","run","isAutofilled","runOutsideAngular","addEventListener","unlisten","removeEventListener","complete","_info","AutofillMonitor_Factory","CdkAutofill","_autofillMonitor","cdkAutofill","CdkAutofill_Factory","CdkTextareaAutosize","_destroyed","_previousMinRows","_textareaElement","_measuringClass","FIREFOX","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","resizeToFitContent","window","_getWindow","textareaClone","rows","position","visibility","border","padding","overflow","parentNode","clientHeight","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","TextFieldModule","TextFieldModule_Factory","SignUpModule","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","appearance","_labelId","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","nextUniqueId","MAT_ERROR","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MAT_PREFIX","MatPrefix","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","labelOptions","_dir","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_hasFloatingLabel","_connectionContainerRef","_validateControlChild","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","markForCheck","ngControl","onStable","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","detectChanges","prop","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_label","_validateHints","startHint","endHint","hint","userAriaDescribedBy","_getDisplayedMessages","find","setDescribedByIds","labelEl","children","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","getBoundingClientRect","width","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","abs","rect","right","left","getRootNode","rootNode","documentElement","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","animation","descendants","animations","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_formField","_uid","_disabled","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","IOS","_isServer","_isNativeSelect","_isTextarea","multiple","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","focus","isFocused","readonly","_b","call","_previousPlaceholder","validity","badInput","_id","_validateType","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","errorStateMatcher","MatInputModule","MatInputModule_Factory","routes","component","SignUpRoutingModule","forChild"],"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","file":"sign-up-sign-up-module-es5.js","sourcesContent":["/**\n * @license Angular v10.1.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ɵisPromise, ɵisObservable, Injectable, Injector, Input, Host, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCheckboxControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])] });\nCheckboxControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * @description\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor {\n    constructor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        /**\n         * The registered callback function called when an input event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8)); };\nDefaultValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR])] });\nDefaultValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [COMPOSITION_BUFFER_MODE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\nAbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\nAbstractControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractControlDirective });\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\nControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\nControlContainer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlContainer, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵControlContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ControlContainer);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction unimplemented() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw new Error('unimplemented');\n    }\n}\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * @description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * @description\n         * The uncomposed array of async validators for the control\n         *\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * @description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get validator() {\n        return unimplemented();\n    }\n    /**\n     * @description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get asyncValidator() {\n        return unimplemented();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get ngClassUntouched() {\n        return this._cd.control ? this._cd.control.untouched : false;\n    }\n    get ngClassTouched() {\n        return this._cd.control ? this._cd.control.touched : false;\n    }\n    get ngClassPristine() {\n        return this._cd.control ? this._cd.control.pristine : false;\n    }\n    get ngClassDirty() {\n        return this._cd.control ? this._cd.control.dirty : false;\n    }\n    get ngClassValid() {\n        return this._cd.control ? this._cd.control.valid : false;\n    }\n    get ngClassInvalid() {\n        return this._cd.control ? this._cd.control.invalid : false;\n    }\n    get ngClassPending() {\n        return this._cd.control ? this._cd.control.pending : false;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(ɵngcc0.ɵɵdirectiveInject(NgControl, 2)); };\nNgControlStatus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatus.ctorParameters = () => [\n    { type: NgControl, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatus, [{\n        type: Directive,\n        args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n    }], function () { return [{ type: NgControl, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 2)); };\nNgControlStatusGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatusGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatusGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            return control.value.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return (control) => {\n            return hasValidLength(control.value) && control.value.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        let regex;\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return null;\n    }\n    static compose(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return mergeErrors(executeValidators(control, presentValidators));\n        };\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            const observables = executeValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(mergeErrors));\n        };\n    }\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs)) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map(validator => {\n        return isValidatorFn(validator) ?\n            validator :\n            ((c) => validator.validate(c));\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNumberValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR])] });\nNumberValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\nfunction throwNameError() {\n    throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\nRadioControlRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RadioControlRegistry, factory: RadioControlRegistry.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor {\n    constructor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = () => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /** @nodoc */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n}\nRadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RadioControlRegistry), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRadioControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR])] });\nRadioControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: RadioControlRegistry },\n    { type: Injector }\n];\nRadioControlValueAccessor.propDecorators = {\n    name: [{ type: Input }],\n    formControlName: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: RadioControlRegistry }, { type: ɵngcc0.Injector }]; }, { name: [{\n            type: Input\n        }], formControlName: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nRangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRangeValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR])] });\nRangeValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ReactiveErrors {\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}.\n    Support for using the ngModel input property and ngModelChange event with\n    reactive form directives has been deprecated in Angular v6 and will be removed\n    in a future version of Angular.\n\n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' :\n            'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        const valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR])] });\nSelectControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectControlValueAccessor, 9)); };\nNgSelectOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nNgSelectOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (_) => {\n            const selected = [];\n            if (_.selectedOptions !== undefined) {\n                const options = _.selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                const options = _.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectMultipleControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR])] });\nSelectMultipleControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectMultipleControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9)); };\nɵNgSelectMultipleOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nɵNgSelectMultipleOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nɵNgSelectMultipleOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\nfunction setUpControl(control, dir) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n    }\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange((isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n}\nfunction cleanUpControl(control, dir) {\n    const noop = () => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _noControlError(dir);\n        }\n    };\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    let messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = `path: '${dir.path.join(' -> ')}'`;\n    }\n    else if (dir.path[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(normalizeValidators(validators)) :\n        null;\n}\nfunction composeAsyncValidators(validators) {\n    return validators != null ?\n        Validators.composeAsync(normalizeValidators(validators)) :\n        null;\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeDir(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            ReactiveErrors.ngModelWarning(name);\n        }\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    let controlToFind = control;\n    path.forEach((name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty(name) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at(name) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    });\n    return controlToFind;\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        /**\n         * Indicates that a control has its own pending asynchronous validation in progress.\n         *\n         * @internal\n         */\n        this._hasOwnPendingAsyncValidator = false;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n        this._rawValidators = validators;\n        this._rawAsyncValidators = asyncValidators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n    /**\n     * The function that is used to determine the validity of this control synchronously.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * The function that is used to determine the validity of this control asynchronously.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setValidators(newValidator) {\n        this._rawValidators = newValidator;\n        this._composedValidatorFn = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setAsyncValidators(newValidator) {\n        this._rawAsyncValidators = newValidator;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param parent Sets the parent of the control\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = true;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = false;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            this._hasOwnPendingAsyncValidator = false;\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        /** @internal */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * @internal\n     */\n    _updateValue() { }\n    /**\n     * @internal\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = () => { };\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param name The control name to remove from the collection\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param controlName The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const controlName of Object.keys(this.controls)) {\n            const control = this.controls[controlName];\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst ɵ0 = () => Promise.resolve(null);\nconst resolvedPromise = (ɵ0)();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = [];\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(this._directives, dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /** @internal */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n}\nNgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgForm.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgForm.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgForm.propDecorators = {\n    options: [{ type: Input, args: ['ngFormOptions',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForm, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { options: [{\n            type: Input,\n            args: ['ngFormOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * The synchronous validators registered with this group.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * The async validators registered with this group.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\nAbstractFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractFormGroupDirective, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵAbstractFormGroupDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(AbstractFormGroupDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbstractFormGroupDirective, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TemplateDrivenErrors {\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 5), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgModelGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([modelGroupProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgModelGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgModelGroup.propDecorators = {\n    name: [{ type: Input, args: ['ngModelGroup',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModelGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['ngModelGroup']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\nconst ɵ0$1 = () => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise$1 = (ɵ0$1)();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You then access the control using the directive's `control` property, but\n * most properties used (like `valid` and `dirty`) fall through to the control anyway for direct\n * access. See a full list of properties directly available in `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel name attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. The name attribute is\n * used within a custom form component, and the name `@Input` property serves a different purpose.\n *\n * ```html\n * <form>\n *   <my-person-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-person-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise$1.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        });\n    }\n}\nNgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 9), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10)); };\nNgModel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nNgModel.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] }\n];\nNgModel.propDecorators = {\n    name: [{ type: Input }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    options: [{ type: Input, args: ['ngModelOptions',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], name: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }], options: [{\n            type: Input,\n            args: ['ngModelOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\nɵNgNoValidate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgNoValidate, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            ReactiveErrors.disabledAttrWarning();\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\nFormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\nFormControlDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlDirective.propDecorators = {\n    form: [{ type: Input, args: ['formControl',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlDirective, [{\n        type: Directive,\n        args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], form: [{\n            type: Input,\n            args: ['formControl']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        removeDir(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form group.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Adds a new `FormArrayName` directive instance to the form.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form array.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            const newCtrl = this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir.control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(() => this._updateDomValue());\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(() => { });\n        this._oldForm = this.form;\n    }\n    _updateValidators() {\n        const sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([this.form.validator, sync]);\n        const async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n    }\n    _checkFormPresent() {\n        if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            ReactiveErrors.missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nFormGroupDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupDirective.propDecorators = {\n    form: [{ type: Input, args: ['formGroup',] }],\n    ngSubmit: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { form: [{\n            type: Input,\n            args: ['formGroup']\n        }], ngSubmit: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            ReactiveErrors.groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formGroupNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormGroupName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupName.propDecorators = {\n    name: [{ type: Input, args: ['formGroupName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupName, [{\n        type: Directive,\n        args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formGroupName']\n        }] }); })();\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            ReactiveErrors.arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormArrayName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formArrayNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormArrayName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormArrayName.propDecorators = {\n    name: [{ type: Input, args: ['formArrayName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormArrayName, [{\n        type: Directive,\n        args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formArrayName']\n        }] }); })();\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            ReactiveErrors.disabledAttrWarning();\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) &&\n                !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    }\n}\nFormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([controlNameBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlName._ngModelWarningSentOnce = false;\nFormControlName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlName.propDecorators = {\n    name: [{ type: Input, args: ['formControlName',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlName, [{\n        type: Directive,\n        args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input,\n            args: ['formControlName']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator {\n    constructor() {\n        this._required = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.required ? Validators.required(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nRequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\nRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, inputs: { required: \"required\" }, features: [ɵngcc0.ɵɵProvidersFeature([REQUIRED_VALIDATOR])] });\nRequiredValidator.propDecorators = {\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], function () { return []; }, { required: [{\n            type: Input\n        }] }); })();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    }\n}\nCheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\nCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(CheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, null); })();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    constructor() {\n        this._enabled = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this._enabled ? Validators.email(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\nEmailValidator.propDecorators = {\n    email: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], function () { return []; }, { email: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * Method that validates whether the value meets a minimum length requirement.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.minlength == null ? null : this._validator(control);\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n    }\n}\nMinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\nMinLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"minlength\", ctx.minlength ? ctx.minlength : null);\n    } }, inputs: { minlength: \"minlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMinLengthValidator.propDecorators = {\n    minlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            }]\n    }], function () { return []; }, { minlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * Method that validates whether the value exceeds the maximum length requirement.\n     * @nodoc\n     */\n    validate(control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n    }\n}\nMaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\nMaxLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n    } }, inputs: { maxlength: \"maxlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaxLengthValidator.propDecorators = {\n    maxlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            }]\n    }], function () { return []; }, { maxlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * Method that validates whether the value matches the the pattern requirement.\n     * @nodoc\n     */\n    validate(control) {\n        return this._validator(control);\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.pattern(this.pattern);\n    }\n}\nPatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\nPatternValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"pattern\", ctx.pattern ? ctx.pattern : null);\n    } }, inputs: { pattern: \"pattern\" }, features: [ɵngcc0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nPatternValidator.propDecorators = {\n    pattern: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PatternValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            }]\n    }], function () { return []; }, { pattern: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ɵInternalFormsSharedModule });\nɵInternalFormsSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator], exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    /**\n     * @description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormGroup`. The object can\n     * have two shapes:\n     *\n     * 1) `AbstractControlOptions` object (preferred), which consists of:\n     * * `validators`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidators`: A single async validator or array of async validator functions\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n     * submit')\n     *\n     * 2) Legacy configuration object, which consists of:\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     */\n    group(controlsConfig, options = null) {\n        const controls = this._reduceControls(controlsConfig);\n        let validators = null;\n        let asyncValidators = null;\n        let updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators, updateOn, validators });\n    }\n    /**\n     * @description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        const controls = controlsConfig.map(c => this._createControl(c));\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controlsConfig) {\n        const controls = {};\n        Object.keys(controlsConfig).forEach(controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    }\n    /** @internal */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            const value = controlConfig[0];\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\nFormBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilder, factory: FormBuilder.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilder, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.1.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });\nFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n            ]\n        };\n    }\n}\nReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });\nReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c, ɵInternalFormsSharedModule as ɵangular_packages_forms_forms_d, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f, AbstractControlStatus as ɵangular_packages_forms_forms_g, ngControlStatusHost as ɵangular_packages_forms_forms_h, formDirectiveProvider as ɵangular_packages_forms_forms_i, formControlBinding as ɵangular_packages_forms_forms_j, modelGroupProvider as ɵangular_packages_forms_forms_k, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m, RadioControlRegistry as ɵangular_packages_forms_forms_n, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p, formControlBinding$1 as ɵangular_packages_forms_forms_q, controlNameBinding as ɵangular_packages_forms_forms_r, formDirectiveProvider$1 as ɵangular_packages_forms_forms_s, formGroupNameProvider as ɵangular_packages_forms_forms_t, formArrayNameProvider as ɵangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w, ɵNgSelectMultipleOption as ɵangular_packages_forms_forms_x, ɵNgNoValidate as ɵangular_packages_forms_forms_y, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z };\n\n//# sourceMappingURL=forms.js.map","import { SecurityContext, ɵɵdefineInjectable, ɵɵinject, ErrorHandler, Injectable, Optional, Inject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        const key = iconKey(namespace, name);\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString('<svg></svg>');\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nMatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler)); }, token: MatIconRegistry, providedIn: \"root\" });\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, null); })();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nclass MatIconBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = attr => `[${attr}]`;\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() { return this._fontSet; }\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() { return this._fontIcon; }\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return parts;\n            default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        const svgIconChanges = changes['svgIcon'];\n        this._svgNamespace = null;\n        this._svgName = null;\n        if (svgIconChanges) {\n            this._currentIconFetch.unsubscribe();\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                if (namespace) {\n                    this._svgNamespace = namespace;\n                }\n                if (iconName) {\n                    this._svgName = iconName;\n                }\n                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe(svg => this._setSvgElement(svg), (err) => {\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    this._errorHandler.handleError(new Error(errorMessage));\n                });\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 7, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet);\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                    '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                    '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, ɵ0 };\n\n//# sourceMappingURL=icon.js.map","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-singup-container',\n  templateUrl: './signup-container.component.html',\n  styleUrls: ['./signup-container.component.scss']\n})\nexport class SignupContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sign-up-container\">\n    <app-sign-up-form></app-sign-up-form>\n</div>\n<div class=\"background\">\n</div>\n\n","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CheckUserResponse } from '../model/checkUserResponse';\nimport { Observable } from 'rxjs';\nimport { CheckUserRequest } from '../model/checkUserRequest';\nimport { SignUpRequest } from '../model/signUpRequest';\nimport { SignUpResponse } from '../model/signUpResponse';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SignUpService {\n\n    constructor(private http: HttpClient) {\n    }\n\n\n    public checkUser(request: CheckUserRequest): Observable<CheckUserResponse> {\n        return this.http\n            .post<CheckUserResponse>('https://api.raisely.com/v3/check-user', request);\n    }\n\n    public signUp(request: SignUpRequest): Observable<SignUpResponse> {\n        return this.http\n            .post<SignUpResponse>('https://api.raisely.com/v3/signup', request);\n    }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ErrorModalStoreService } from '../../../../modals/error-modals/services/error-modal.store.service';\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { SignUpService } from '../../../services/sign-up.service';\nimport { CheckUserRequest } from '../../../model/checkUserRequest';\nimport { CheckUserResponse } from '../../../model/checkUserResponse';\nimport { SignUpRequest } from '../../../model/signUpRequest';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ConfirmationModalComponent } from '../../../../modals/confirmation-moldal/confirmation-modal.component';\n\n@Component({\n    selector: 'app-sign-up-form',\n    templateUrl: './sign-up-form.component.html',\n    styleUrls: ['./sign-up-form.component.scss']\n})\nexport class SignUpFormComponent implements OnInit, OnDestroy {\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n    signupForm: FormGroup = this.formBuilder.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        confirmPassword: ['', Validators.required],\n        password: ['', Validators.required]\n    }, {\n        validator: this.validatePassword()\n    });\n    hidePassword = true;\n    hidePasswordConfirmation = true;\n    debounceTime = 500;\n    userExists: EnumUserExists = EnumUserExists.initial;\n    EnumUserExists = EnumUserExists;\n\n    constructor(private formBuilder: FormBuilder,\n                private errorModalStoreService: ErrorModalStoreService,\n                private signUpService: SignUpService,\n                private matDialog: MatDialog) {\n\n    }\n\n\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        // Now let's also unsubscribe from the subject itself:\n        this.destroy$.unsubscribe();\n    }\n\n    validatePassword() {\n        return (formGroup: FormGroup) => {\n            const control = formGroup.controls.password;\n            const matchingControl = formGroup.controls.confirmPassword;\n            if (matchingControl.errors && !matchingControl.errors.validatePassword) {\n                return;\n            }\n            if (control.value !== matchingControl.value) {\n                matchingControl.setErrors({ validatePassword: true });\n            } else {\n                matchingControl.setErrors(null);\n            }\n        };\n    }\n\n    ngOnInit(): void {\n        this.signupForm.controls.email.valueChanges.pipe(\n            map((email: string) => {\n                this.userExists = EnumUserExists.initial;\n                return email;\n            }),\n            debounceTime(this.debounceTime),\n            distinctUntilChanged(),\n            takeUntil(this.destroy$),\n            filter(() => !this.signupForm.controls.email.errors),\n            switchMap((email: string) => {\n                this.userExists = EnumUserExists.checking;\n                const request: CheckUserRequest = {\n                    campaignUuid: '46aa3270-d2ee-11ea-a9f0-e9a68ccff42a',\n                    data: {\n                        email\n                    }\n                };\n                return this.signUpService.checkUser(request);\n            }),\n            map((response: CheckUserResponse) => {\n                switch (response.data.status) {\n                    case 'OK':\n                        this.userExists = EnumUserExists.valid;\n                        this.signupForm.controls.email.setErrors(null);\n                        break;\n                    case 'EXISTS':\n                        this.userExists = EnumUserExists.exists;\n                        this.signupForm.controls.email.setErrors({ exists: true });\n                        break;\n                    default:\n                        this.userExists = EnumUserExists.error;\n                        this.signupForm.controls.email.setErrors({ unknown: true });\n                        break;\n                }\n            })\n        ).subscribe(\n            response => {\n            },\n            err => {\n                this.errorModalStoreService.setError('Something has happened. Our IT department is working on it');\n                console.log(err);\n            }\n        );\n    }\n\n    submit() {\n        if (this.signupForm.invalid) {\n            this.errorModalStoreService.setError('Please verify that the information is completed and valid.');\n        } else if (this.userExists === EnumUserExists.initial || this.userExists === EnumUserExists.checking) {\n            this.errorModalStoreService.setError('We are verifying if the email address exists. Please allow us one more minute.');\n        } else {\n            const request: SignUpRequest = {\n                campaignUuid: '46aa3270-d2ee-11ea-a9f0-e9a68ccff42a',\n                data: {\n                    email: this.signupForm.controls.email.value,\n                    firstName: this.signupForm.controls.firstName.value,\n                    lastName: this.signupForm.controls.lastName.value,\n                    password: this.signupForm.controls.password.value,\n\n                }\n            };\n            this.signUpService.signUp(request).pipe(\n                takeUntil(this.destroy$)\n            ).subscribe(\n                response => {\n                    const dialogConfig = new MatDialogConfig();\n                    dialogConfig.disableClose = true;\n                    dialogConfig.autoFocus = true;\n                    const reference = this.matDialog.open(ConfirmationModalComponent, dialogConfig);\n                    reference.componentInstance.message = response.message;\n                    this.signupForm.reset();\n                },\n                err => {\n                    this.errorModalStoreService.setError('Something has happened. Our IT department is working on it');\n                    console.log(err);\n                }\n            );\n        }\n    }\n}\n\nexport enum EnumUserExists {\n    initial,\n    checking,\n    exists,\n    valid,\n    error\n}\n","<h1>\n    Signup\n</h1>\n<h2>\n    Create a new free account and star receiving special offers!\n</h2>\n<ng-container [formGroup]=\"signupForm\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input formControlName=\"email\" matInput type=\"text\">\n        <mat-spinner *ngIf=\"userExists === EnumUserExists.checking\"  diameter=\"20\" color=\"accent\" matSuffix></mat-spinner>\n        <mat-icon *ngIf=\"userExists === EnumUserExists.valid\"\n                  matSuffix>check</mat-icon>\n        <mat-error *ngIf=\"signupForm.controls['email'].errors\">\n            <span *ngIf=\"signupForm.controls['email'].errors['required']\">\n                Email is required\n            </span>\n            <span *ngIf=\"signupForm.controls['email'].errors['email']\">\n                Please enter a valid email address\n            </span>\n            <span *ngIf=\"signupForm.controls['email'].errors['exists']\">\n                The email address is already in use, please use a different email address\n            </span>\n            <span *ngIf=\"signupForm.controls['email'].errors['unknown']\">\n                Something has happened, please try again later.\n            </span>\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>First Name</mat-label>\n        <input formControlName=\"firstName\" matInput type=\"text\">\n        <mat-error *ngIf=\"signupForm.controls['firstName'].errors\">\n            <span *ngIf=\"signupForm.controls['firstName'].errors['required']\">\n                First name is required\n            </span>\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Last Name</mat-label>\n        <input formControlName=\"lastName\" matInput type=\"text\">\n        <mat-error *ngIf=\"signupForm.controls['lastName'].errors\">\n            <span *ngIf=\"signupForm.controls['lastName'].errors['required']\">\n                Last name is required\n            </span>\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input [type]=\"hidePassword ? 'password' : 'text'\" formControlName=\"password\" matInput type=\"text\">\n        <button (click)=\"hidePassword = !hidePassword\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hidePassword\" mat-icon-button\n                matSuffix>\n            <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-error *ngIf=\"signupForm.controls['password'].errors\">\n            <span *ngIf=\"signupForm.controls['password'].errors['required']\">\n                Password is required\n            </span>\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\" class=\"example-form-field\">\n        <mat-label>Confirm Password</mat-label>\n        <input [type]=\"hidePasswordConfirmation ? 'password' : 'text'\" formControlName=\"confirmPassword\" matInput\n               type=\"text\">\n        <button (click)=\"hidePasswordConfirmation = !hidePasswordConfirmation\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hidePasswordConfirmation\"\n                mat-icon-button matSuffix>\n            <mat-icon>{{hidePasswordConfirmation ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-error *ngIf=\"signupForm.controls['confirmPassword'].errors\">\n            <span *ngIf=\"signupForm.controls['confirmPassword'].errors['required']\">\n                Password confirmation is required\n            </span>\n            <span *ngIf=\"signupForm.controls['confirmPassword'].errors['validatePassword']\">\n                Password does not match\n            </span>\n        </mat-error>\n    </mat-form-field>\n    <button color=\"primary\" mat-flat-button (click)=\"submit()\" >Sign me in!</button>\n</ng-container>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst _c2 = \".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\";\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nclass MatButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    // Add a class for disabled button styling instead of the using attribute\n                    // selector or pseudo-selector.  This allows users to create focusabled\n                    // disabled buttons without recreating the styles.\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton, MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton, MatAnchor, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignUpRoutingModule } from './sign-up-routing.module';\nimport { SignUpFormComponent } from './sign-up/sign-up-container/sign-up-form/sign-up-form.component';\nimport { SignupContainerComponent } from './sign-up/sign-up-container/signup-container.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n@NgModule({\n    declarations: [SignUpFormComponent, SignupContainerComponent],\n    imports: [\n        CommonModule,\n        SignUpRoutingModule,\n        MatCardModule,\n        MatInputModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatButtonModule,\n        ReactiveFormsModule\n    ]\n})\nexport class SignUpModule {\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupContainerComponent } from './sign-up/sign-up-container/signup-container.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: SignupContainerComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignUpRoutingModule { }\n"]}