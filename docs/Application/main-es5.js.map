{"version":3,"sources":["webpack:///src/app/modals/error-modals/error-modal/error-modal-b/error-modal-b.component.ts","webpack:///src/app/modals/error-modals/error-modal/error-modal-b/error-modal-b.component.html","webpack:///src/app/mainStore/app.reducer.ts","webpack:///src/app/modals/error-modals/store/index.ts","webpack:///src/environments/environment.ts","webpack:///src/app/modals/error-modals/error-modals.module.ts","webpack:///src/app/modals/error-modals/store/error-modal.actions.ts","webpack:///src/app/modals/confirmation-moldal/confirmation-modal.component.ts","webpack:///src/app/modals/confirmation-moldal/confirmation-modal.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modals/error-modals/store/error-modal.reducers.ts","webpack:///src/app/app.module.ts","webpack:///src/app/modals/error-modals/services/error-modal.store.service.ts","webpack:///src/app/modals/error-modals/error-modal/error-modal.component.ts","webpack:///src/app/modals/error-modals/error-modal/error-modal.component.html","webpack:///src/app/modals/error-modals/store/error-modal.selectors.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ErrorModalBComponent","errorList","Array","from","Set","close","selector","templateUrl","styleUrls","errorListInput","reducers","ErrorModal","environment","production","ErrorModalsModule","declarations","imports","SET_ERROR","CLEAR_ERRORS","SET_MODAL","setError","clearErrors","setModal","ConfirmationModalComponent","dialogRef","AppComponent","errorModalStoreService","matDialog","title","destroy$","next","unsubscribe","selectModal","pipe","subscribe","showErrorModal","dialogConfig","disableClose","autoFocus","open","initialErrorModalState","errors","modal","errorReducer","state","action","newState","push","error","reducer","AppModule","forRoot","instrument","maxAge","providers","bootstrap","ErrorModalStoreService","store","dispatch","select","providedIn","ErrorModalComponent","errorList$","selectErrors","selectErrorModalState","errorModalState","routes","path","loadChildren","then","m","SignUpModule","redirectTo","AppRoutingModule","exports","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-error-modal-b',\r\n    templateUrl: './error-modal-b.component.html',\r\n    styleUrls: ['./error-modal-b.component.scss'],\r\n})\r\nexport class ErrorModalBComponent {\r\n    @Input() public close: () => void;\r\n    public errorList: string[] = [];\r\n\r\n    @Input() set errorListInput(errorList: string[]) {\r\n        this.errorList = Array.from(new Set(errorList));\r\n    }\r\n\r\n}\r\n","\r\n<h2 mat-dialog-title >Something has happened!</h2 >\r\n\r\n<mat-dialog-content >\r\n\t<ng-container *ngFor=\"let error of errorList\" >\r\n        <div>{{error}}</div>\r\n\t</ng-container >\r\n</mat-dialog-content >\r\n\r\n<mat-dialog-actions align=\"end\" >\r\n\t<button class=\"mat-raised-button mat-primary\" (click)=\"close()\" >OK</button >\r\n</mat-dialog-actions >\r\n","import * as ErrorModal from '../modals/error-modals/store/index';\r\n\r\nexport const reducers: any = {\r\n    ErrorModal: ErrorModal.reducer,\r\n};\r\n","import * as actions from './error-modal.actions';\r\nimport { initialErrorModalState, reducer } from './error-modal.reducers';\r\nimport * as selectors from './error-modal.selectors';\r\n\r\nimport { IErrorModalState } from './error-modal.interface';\r\n\r\nexport * from './error-modal.actions';\r\nexport * from './error-modal.reducers';\r\nexport * from './error-modal.selectors';\r\n\r\nexport {\r\n    IErrorModalState,\r\n    actions,\r\n    initialErrorModalState,\r\n    reducer,\r\n    selectors,\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ErrorModalBComponent } from './error-modal/error-modal-b/error-modal-b.component';\r\nimport { ErrorModalComponent } from './error-modal/error-modal.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ErrorModalComponent,\r\n        ErrorModalBComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        MatDialogModule,\r\n    ],\r\n})\r\nexport class ErrorModalsModule {\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const SET_ERROR = '[ERROR] SET_ERROR';\r\nexport const CLEAR_ERRORS = '[ERROR] CLEAR_ERRORS';\r\nexport const SET_MODAL = '[ERROR] SET_MODAL';\r\n\r\n\r\nexport const setError = createAction(SET_ERROR, props<{ error: string }>());\r\nexport const clearErrors = createAction(CLEAR_ERRORS);\r\nexport const setModal = createAction(SET_MODAL, props<{ open: boolean }>());\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirmation-modal',\n    templateUrl: './confirmation-modal.component.html',\n    styleUrls: ['./confirmation-modal.component.scss']\n})\nexport class ConfirmationModalComponent implements OnInit {\n    message: string;\n\n    constructor(private dialogRef: MatDialogRef<ConfirmationModalComponent>) {\n    }\n\n    ngOnInit(): void {\n    }\n  public close() {\n    this.dialogRef.close();\n  }\n}\n","\n<h2 mat-dialog-title >Thanks!</h2 >\n\n<mat-dialog-content >\n{{message}}\n</mat-dialog-content >\n\n<mat-dialog-actions align=\"end\" >\n    <button class=\"mat-raised-button mat-primary\" (click)=\"close()\" >OK</button >\n</mat-dialog-actions >\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ErrorModalStoreService } from './modals/error-modals/services/error-modal.store.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ErrorModalComponent } from './modals/error-modals/error-modal/error-modal.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    title = 'Application';\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private errorModalStoreService: ErrorModalStoreService, private matDialog: MatDialog) {\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next(true);\n        // Now let's also unsubscribe from the subject itself:\n        this.destroy$.unsubscribe();\n    }\n\n    ngOnInit(): void {\n        this.errorModalStoreService.selectModal()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((showErrorModal: boolean) => {\n                if (showErrorModal) {\n                    const dialogConfig = new MatDialogConfig();\n                    dialogConfig.disableClose = true;\n                    dialogConfig.autoFocus = true;\n                    this.matDialog.open(ErrorModalComponent, dialogConfig);\n                }\n            });\n    }\n}\n","<router-outlet></router-outlet>\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as errorActions from './error-modal.actions';\r\nimport { IErrorModalState } from './index';\r\n\r\nexport const initialErrorModalState: IErrorModalState = {\r\n    errors: [],\r\n    modal:  false,\r\n};\r\n\r\nexport const errorReducer = createReducer(\r\n    initialErrorModalState,\r\n    on(errorActions.setError, (state: IErrorModalState, action: { error: string }) => {\r\n        const newState: IErrorModalState = { ...state};\r\n        const errors: string[]           = [...newState.errors];\r\n        errors.push(action.error);\r\n        newState.errors = [...errors];\r\n        return newState;\r\n    }),\r\n    on(errorActions.clearErrors, (state: IErrorModalState) => {\r\n        const newState: IErrorModalState = { ...state};\r\n        newState.errors                  = [...[]];\r\n        return newState;\r\n    }),\r\n    on(errorActions.setModal, (state: IErrorModalState, action: { open: boolean }) => {\r\n        const newState: IErrorModalState = { ...state};\r\n        newState.modal                   = action.open;\r\n        return newState;\r\n    }),\r\n);\r\n\r\nexport function reducer(state: IErrorModalState | undefined, action: Action): IErrorModalState {\r\n    return errorReducer(state, action);\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { ErrorModalsModule } from './modals/error-modals/error-modals.module';\nimport { reducers } from './mainStore/app.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfirmationModalComponent } from './modals/confirmation-moldal/confirmation-modal.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ConfirmationModalComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        StoreModule.forRoot(reducers),\n        EffectsModule.forRoot([]),\n        StoreDevtoolsModule.instrument({\n            maxAge: 25, // Retains last 25 states\n        }),\n        ErrorModalsModule,\n        MatDialogModule,\n        HttpClientModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { IErrorModalState } from '../store';\r\nimport * as actions from '../store/error-modal.actions';\r\nimport * as selectors from '../store/error-modal.selectors';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ErrorModalStoreService {\r\n    constructor(private store: Store<IErrorModalState>) {\r\n    }\r\n\r\n    public clearErrors(): void {\r\n        this.store.dispatch(actions.clearErrors());\r\n    }\r\n\r\n    public selectErrors(): Observable<string[]> {\r\n        return this.store.select(selectors.selectErrors);\r\n    }\r\n\r\n    public selectModal(): Observable<boolean> {\r\n        return this.store.select(selectors.selectModal);\r\n    }\r\n\r\n    public setError(error: string): void {\r\n        this.store.dispatch(actions.setError({ error }));\r\n        this.setModal(true);\r\n    }\r\n\r\n    public setModal(open: boolean): void {\r\n        this.store.dispatch(actions.setModal({ open }));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ErrorModalStoreService } from '../services/error-modal.store.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-error-modal',\r\n    templateUrl: './error-modal.component.html',\r\n    styleUrls: ['./error-modal.component.scss'],\r\n})\r\nexport class ErrorModalComponent implements OnInit {\r\n\r\n    public errorList$: Observable<string[]>;\r\n\r\n    constructor(private errorModalStoreService: ErrorModalStoreService,\r\n                private dialogRef: MatDialogRef<ErrorModalComponent>\r\n    ) {\r\n    }\r\n\r\n    public close = () => {\r\n        this.errorModalStoreService.setModal(false);\r\n        this.errorModalStoreService.clearErrors();\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.errorList$ = this.errorModalStoreService.selectErrors();\r\n    }\r\n}\r\n","<app-error-modal-b [errorListInput]=\"errorList$|async\" [close]=\"close\"></app-error-modal-b >\r\n","import { createSelector } from '@ngrx/store';\r\nimport { IErrorModalState } from './error-modal.interface';\r\n\r\nexport const selectErrorModalState = (state: any) => (\r\n    state.ErrorModal\r\n);\r\nexport const selectModal = createSelector(\r\n    selectErrorModalState,\r\n    (errorModalState: IErrorModalState) => errorModalState.modal,\r\n);\r\nexport const selectErrors = createSelector(\r\n    selectErrorModalState,\r\n    (errorModalState: IErrorModalState) => errorModalState.errors,\r\n);\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SignUpModule } from './sign-up/sign-up.module';\n\n\nconst routes: Routes = [{\n    path: 'sign-up',\n    loadChildren: () => import('./sign-up/sign-up.module')\n        .then((m: { SignUpModule: SignUpModule }) => m.SignUpModule)\n},\n    {\n        path: '**',\n        redirectTo: 'sign-up'\n    }];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}